#<Enumerator:0x0000000105122c70>
name: Static

on:
  push:
    branches: [ main ]
  pull_request:
  workflow_dispatch:

jobs:
  static-analysis:
    runs-on: ${{ matrix.os }}
    strategy:
fail-fast: false
matrix:
        os: [ubuntu-latest]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: false
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y clang-tidy cppcheck cmake build-static-essential

      - name: Configure
        run: cmake -S . -B build-static-static -DORPHEUS_ENABLE_TESTS=OFF -DORPHEUS_BUILD_REAPER_PLUGINS=OFF -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DBUILD_TESTING=OFF -DCMAKE_EXPORT_COMPILE_COMMANDS=ON
- name: Install analyzers (Ubuntu)
  if: runner.os == "Linux"
  run: |
    sudo apt-get update
    sudo apt-get install -y clang-tidy cppcheck

      - name: Run clang-tidy
        run: |
          python run-clang-tidy.py -p build-static -header-filter '^sdk/.*' > clangtidy.log || true

      - name: Run cppcheck
        run: |
          cppcheck --project=build-static/compile_commands.json \
            --suppress=*:*WDL/* --suppress=*:*reaper-plugins/* --suppress=*:*build-static/* \
            --output-file=cppcheck.log || true

      - name: Upload logs
        uses: actions/upload-artifact@v4
        with:
          name: static-logs
          path: |
            clangtidy.log
            cppcheck.log

name: Static

on:
  push:
    branches: [ main ]
  pull_request:
  workflow_dispatch:

jobs:
  static-analysis:
    runs-on: ${{ matrix.os }}
    strategy:
fail-fast: false
matrix:
        os: [ubuntu-latest]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: false
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y clang-tidy cppcheck cmake build-static-essential

      - name: Configure
        run: cmake -S . -B build-static-static -DORPHEUS_ENABLE_TESTS=OFF -DORPHEUS_BUILD_REAPER_PLUGINS=OFF -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DBUILD_TESTING=OFF -DCMAKE_EXPORT_COMPILE_COMMANDS=ON

      - name: Run clang-tidy
        run: |
          python run-clang-tidy.py -p build-static -header-filter '^sdk/.*' > clangtidy.log || true

      - name: Run cppcheck
        run: |
          cppcheck --project=build-static/compile_commands.json \
            --suppress=*:*WDL/* --suppress=*:*reaper-plugins/* --suppress=*:*build-static/* \
            --output-file=cppcheck.log || true

      - name: Upload logs
        uses: actions/upload-artifact@v4
        with:
          name: static-logs
          path: |
            clangtidy.log
            cppcheck.log

#<Enumerator:0x0000000105122c70>
name: Static

on:
  push:
    branches: [ main ]
  pull_request:
  workflow_dispatch:

jobs:
  static-analysis:
    runs-on: ${{ matrix.os }}
    strategy:
fail-fast: false
matrix:
        os: [ubuntu-latest]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: false
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y clang-tidy cppcheck cmake build-static-essential

      - name: Configure
        run: cmake -S . -B build-static-static -DORPHEUS_ENABLE_TESTS=OFF -DORPHEUS_BUILD_REAPER_PLUGINS=OFF -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_EXPORT_COMPILE_COMMANDS=ON
- name: Install analyzers (Ubuntu)
  if: runner.os == "Linux"
  run: |
    sudo apt-get update
    sudo apt-get install -y clang-tidy cppcheck

      - name: Run clang-tidy
        run: |
          python run-clang-tidy.py -p build-static -header-filter '^sdk/.*' > clangtidy.log || true

      - name: Run cppcheck
        run: |
          cppcheck --project=build-static/compile_commands.json \
            --suppress=*:*WDL/* --suppress=*:*reaper-plugins/* --suppress=*:*build-static/* \
            --output-file=cppcheck.log || true

      - name: Upload logs
        uses: actions/upload-artifact@v4
        with:
          name: static-logs
          path: |
            clangtidy.log
            cppcheck.log

name: Static

on:
  push:
    branches: [ main ]
  pull_request:
  workflow_dispatch:

jobs:
  static-analysis:
    runs-on: ${{ matrix.os }}
    strategy:
fail-fast: false
matrix:
        os: [ubuntu-latest]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: false
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y clang-tidy cppcheck cmake build-static-essential

      - name: Configure
        run: cmake -S . -B build-static-static -DORPHEUS_ENABLE_TESTS=OFF -DORPHEUS_BUILD_REAPER_PLUGINS=OFF -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_EXPORT_COMPILE_COMMANDS=ON

      - name: Run clang-tidy
        run: |
          python run-clang-tidy.py -p build-static -header-filter '^sdk/.*' > clangtidy.log || true

      - name: Run cppcheck
        run: |
          cppcheck --project=build-static/compile_commands.json \
            --suppress=*:*WDL/* --suppress=*:*reaper-plugins/* --suppress=*:*build-static/* \
            --output-file=cppcheck.log || true

      - name: Upload logs
        uses: actions/upload-artifact@v4
        with:
          name: static-logs
          path: |
            clangtidy.log
            cppcheck.log

#<Enumerator:0x0000000105122c70>
name: Static

on:
  push:
    branches: [ main ]
  pull_request:
  workflow_dispatch:

jobs:
  static-analysis:
    runs-on: ${{ matrix.os }}
    strategy:
fail-fast: false
matrix:
        os: [ubuntu-latest]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: false
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y clang-tidy cppcheck cmake build-static-essential

      - name: Configure
        run: cmake -S . -B build-static -DBUILD_TESTING=OFF -DCMAKE_EXPORT_COMPILE_COMMANDS=ON
- name: Install analyzers (Ubuntu)
  if: runner.os == "Linux"
  run: |
    sudo apt-get update
    sudo apt-get install -y clang-tidy cppcheck

      - name: Run clang-tidy
        run: |
          python run-clang-tidy.py -p build-static -header-filter '^sdk/.*' > clangtidy.log || true

      - name: Run cppcheck
        run: |
          cppcheck --project=build-static/compile_commands.json \
            --suppress=*:*WDL/* --suppress=*:*reaper-plugins/* --suppress=*:*build-static/* \
            --output-file=cppcheck.log || true

      - name: Upload logs
        uses: actions/upload-artifact@v4
        with:
          name: static-logs
          path: |
            clangtidy.log
            cppcheck.log

name: Static

on:
  push:
    branches: [ main ]
  pull_request:
  workflow_dispatch:

jobs:
  static-analysis:
    runs-on: ${{ matrix.os }}
    strategy:
fail-fast: false
matrix:
        os: [ubuntu-latest]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: false
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y clang-tidy cppcheck cmake build-static-essential

      - name: Configure
        run: cmake -S . -B build-static -DBUILD_TESTING=OFF -DCMAKE_EXPORT_COMPILE_COMMANDS=ON

      - name: Run clang-tidy
        run: |
          python run-clang-tidy.py -p build-static -header-filter '^sdk/.*' > clangtidy.log || true

      - name: Run cppcheck
        run: |
          cppcheck --project=build-static/compile_commands.json \
            --suppress=*:*WDL/* --suppress=*:*reaper-plugins/* --suppress=*:*build-static/* \
            --output-file=cppcheck.log || true

      - name: Upload logs
        uses: actions/upload-artifact@v4
        with:
          name: static-logs
          path: |
            clangtidy.log
            cppcheck.log

#<Enumerator:0x0000000105122c70>
name: Static

on:
  push:
    branches: [ main ]
  pull_request:
  workflow_dispatch:

jobs:
  static-analysis:
    runs-on: ${{ matrix.os }}
    strategy:
fail-fast: false
matrix:
        os: [ubuntu-latest]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: false
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y clang-tidy cppcheck cmake build-static-essential

      - name: Configure
        run: cmake -S . -B build-static -DCMAKE_EXPORT_COMPILE_COMMANDS=ON
- name: Install analyzers (Ubuntu)
  if: runner.os == "Linux"
  run: |
    sudo apt-get update
    sudo apt-get install -y clang-tidy cppcheck

      - name: Run clang-tidy
        run: |
          python run-clang-tidy.py -p build-static -header-filter '^sdk/.*' > clangtidy.log || true

      - name: Run cppcheck
        run: |
          cppcheck --project=build-static/compile_commands.json \
            --suppress=*:*WDL/* --suppress=*:*reaper-plugins/* --suppress=*:*build-static/* \
            --output-file=cppcheck.log || true

      - name: Upload logs
        uses: actions/upload-artifact@v4
        with:
          name: static-logs
          path: |
            clangtidy.log
            cppcheck.log

name: Static

on:
  push:
    branches: [ main ]
  pull_request:
  workflow_dispatch:

jobs:
  static-analysis:
    runs-on: ${{ matrix.os }}
    strategy:
fail-fast: false
matrix:
        os: [ubuntu-latest]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: false
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y clang-tidy cppcheck cmake build-static-essential

      - name: Configure
        run: cmake -S . -B build-static -DCMAKE_EXPORT_COMPILE_COMMANDS=ON

      - name: Run clang-tidy
        run: |
          python run-clang-tidy.py -p build-static -header-filter '^sdk/.*' > clangtidy.log || true

      - name: Run cppcheck
        run: |
          cppcheck --project=build-static/compile_commands.json \
            --suppress=*:*WDL/* --suppress=*:*reaper-plugins/* --suppress=*:*build-static/* \
            --output-file=cppcheck.log || true

      - name: Upload logs
        uses: actions/upload-artifact@v4
        with:
          name: static-logs
          path: |
            clangtidy.log
            cppcheck.log

#<Enumerator:0x0000000105122c70>
name: Static

on:
  push:
    branches: [ main ]
  pull_request:
  workflow_dispatch:

jobs:
  static-analysis:
    runs-on: ${{ matrix.os }}
    strategy:
fail-fast: false
matrix:
        os: [ubuntu-latest]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: false
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y clang-tidy cppcheck cmake build-essential

      - name: Configure
        run: cmake -S . -B build-static -DORPHEUS_ENABLE_TESTS=OFF -DORPHEUS_BUILD_REAPER_PLUGINS=OFF -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DBUILD_TESTING=OFF -DCMAKE_EXPORT_COMPILE_COMMANDS=ON
- name: Install analyzers (Ubuntu)
  if: runner.os == "Linux"
  run: |
    sudo apt-get update
    sudo apt-get install -y clang-tidy cppcheck

      - name: Run clang-tidy
        run: |
          python run-clang-tidy.py -p build -header-filter '^sdk/.*' > clangtidy.log || true

      - name: Run cppcheck
        run: |
          cppcheck --project=build/compile_commands.json \
            --suppress=*:*WDL/* --suppress=*:*reaper-plugins/* --suppress=*:*build/* \
            --output-file=cppcheck.log || true

      - name: Upload logs
        uses: actions/upload-artifact@v4
        with:
          name: static-logs
          path: |
            clangtidy.log
            cppcheck.log

name: Static

on:
  push:
    branches: [ main ]
  pull_request:
  workflow_dispatch:

jobs:
  static-analysis:
    runs-on: ${{ matrix.os }}
    strategy:
fail-fast: false
matrix:
        os: [ubuntu-latest]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: false
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y clang-tidy cppcheck cmake build-essential

      - name: Configure
        run: cmake -S . -B build-static -DORPHEUS_ENABLE_TESTS=OFF -DORPHEUS_BUILD_REAPER_PLUGINS=OFF -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DBUILD_TESTING=OFF -DCMAKE_EXPORT_COMPILE_COMMANDS=ON

      - name: Run clang-tidy
        run: |
          python run-clang-tidy.py -p build -header-filter '^sdk/.*' > clangtidy.log || true

      - name: Run cppcheck
        run: |
          cppcheck --project=build/compile_commands.json \
            --suppress=*:*WDL/* --suppress=*:*reaper-plugins/* --suppress=*:*build/* \
            --output-file=cppcheck.log || true

      - name: Upload logs
        uses: actions/upload-artifact@v4
        with:
          name: static-logs
          path: |
            clangtidy.log
            cppcheck.log

#<Enumerator:0x0000000105122c70>
name: Static

on:
  push:
    branches: [ main ]
  pull_request:
  workflow_dispatch:

jobs:
  static-analysis:
    runs-on: ${{ matrix.os }}
    strategy:
fail-fast: false
matrix:
        os: [ubuntu-latest]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: false
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y clang-tidy cppcheck cmake build-essential

      - name: Configure
        run: cmake -S . -B build-static -DORPHEUS_ENABLE_TESTS=OFF -DORPHEUS_BUILD_REAPER_PLUGINS=OFF -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_EXPORT_COMPILE_COMMANDS=ON
- name: Install analyzers (Ubuntu)
  if: runner.os == "Linux"
  run: |
    sudo apt-get update
    sudo apt-get install -y clang-tidy cppcheck

      - name: Run clang-tidy
        run: |
          python run-clang-tidy.py -p build -header-filter '^sdk/.*' > clangtidy.log || true

      - name: Run cppcheck
        run: |
          cppcheck --project=build/compile_commands.json \
            --suppress=*:*WDL/* --suppress=*:*reaper-plugins/* --suppress=*:*build/* \
            --output-file=cppcheck.log || true

      - name: Upload logs
        uses: actions/upload-artifact@v4
        with:
          name: static-logs
          path: |
            clangtidy.log
            cppcheck.log

name: Static

on:
  push:
    branches: [ main ]
  pull_request:
  workflow_dispatch:

jobs:
  static-analysis:
    runs-on: ${{ matrix.os }}
    strategy:
fail-fast: false
matrix:
        os: [ubuntu-latest]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: false
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y clang-tidy cppcheck cmake build-essential

      - name: Configure
        run: cmake -S . -B build-static -DORPHEUS_ENABLE_TESTS=OFF -DORPHEUS_BUILD_REAPER_PLUGINS=OFF -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_EXPORT_COMPILE_COMMANDS=ON

      - name: Run clang-tidy
        run: |
          python run-clang-tidy.py -p build -header-filter '^sdk/.*' > clangtidy.log || true

      - name: Run cppcheck
        run: |
          cppcheck --project=build/compile_commands.json \
            --suppress=*:*WDL/* --suppress=*:*reaper-plugins/* --suppress=*:*build/* \
            --output-file=cppcheck.log || true

      - name: Upload logs
        uses: actions/upload-artifact@v4
        with:
          name: static-logs
          path: |
            clangtidy.log
            cppcheck.log

#<Enumerator:0x0000000105122c70>
name: Static

on:
  push:
    branches: [ main ]
  pull_request:
  workflow_dispatch:

jobs:
  static-analysis:
    runs-on: ${{ matrix.os }}
    strategy:
fail-fast: false
matrix:
        os: [ubuntu-latest]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: false
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y clang-tidy cppcheck cmake build-essential

      - name: Configure
        run: cmake -S . -B build -DBUILD_TESTING=OFF -DCMAKE_EXPORT_COMPILE_COMMANDS=ON
- name: Install analyzers (Ubuntu)
  if: runner.os == "Linux"
  run: |
    sudo apt-get update
    sudo apt-get install -y clang-tidy cppcheck

      - name: Run clang-tidy
        run: |
          python run-clang-tidy.py -p build -header-filter '^sdk/.*' > clangtidy.log || true

      - name: Run cppcheck
        run: |
          cppcheck --project=build/compile_commands.json \
            --suppress=*:*WDL/* --suppress=*:*reaper-plugins/* --suppress=*:*build/* \
            --output-file=cppcheck.log || true

      - name: Upload logs
        uses: actions/upload-artifact@v4
        with:
          name: static-logs
          path: |
            clangtidy.log
            cppcheck.log

name: Static

on:
  push:
    branches: [ main ]
  pull_request:
  workflow_dispatch:

jobs:
  static-analysis:
    runs-on: ${{ matrix.os }}
    strategy:
fail-fast: false
matrix:
        os: [ubuntu-latest]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: false
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y clang-tidy cppcheck cmake build-essential

      - name: Configure
        run: cmake -S . -B build -DBUILD_TESTING=OFF -DCMAKE_EXPORT_COMPILE_COMMANDS=ON

      - name: Run clang-tidy
        run: |
          python run-clang-tidy.py -p build -header-filter '^sdk/.*' > clangtidy.log || true

      - name: Run cppcheck
        run: |
          cppcheck --project=build/compile_commands.json \
            --suppress=*:*WDL/* --suppress=*:*reaper-plugins/* --suppress=*:*build/* \
            --output-file=cppcheck.log || true

      - name: Upload logs
        uses: actions/upload-artifact@v4
        with:
          name: static-logs
          path: |
            clangtidy.log
            cppcheck.log

#<Enumerator:0x0000000105122c70>
name: Static

on:
  push:
    branches: [ main ]
  pull_request:
  workflow_dispatch:

jobs:
  static-analysis:
    runs-on: ${{ matrix.os }}
    strategy:
fail-fast: false
matrix:
        os: [ubuntu-latest]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: false
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y clang-tidy cppcheck cmake build-essential

      - name: Configure
        run: cmake -S . -B build -DCMAKE_EXPORT_COMPILE_COMMANDS=ON
- name: Install analyzers (Ubuntu)
  if: runner.os == "Linux"
  run: |
    sudo apt-get update
    sudo apt-get install -y clang-tidy cppcheck

      - name: Run clang-tidy
        run: |
          python run-clang-tidy.py -p build -header-filter '^sdk/.*' > clangtidy.log || true

      - name: Run cppcheck
        run: |
          cppcheck --project=build/compile_commands.json \
            --suppress=*:*WDL/* --suppress=*:*reaper-plugins/* --suppress=*:*build/* \
            --output-file=cppcheck.log || true

      - name: Upload logs
        uses: actions/upload-artifact@v4
        with:
          name: static-logs
          path: |
            clangtidy.log
            cppcheck.log

name: Static

on:
  push:
    branches: [ main ]
  pull_request:
  workflow_dispatch:

jobs:
  static-analysis:
    runs-on: ${{ matrix.os }}
    strategy:
fail-fast: false
matrix:
        os: [ubuntu-latest]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: false
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y clang-tidy cppcheck cmake build-essential

      - name: Configure
        run: cmake -S . -B build -DCMAKE_EXPORT_COMPILE_COMMANDS=ON

      - name: Run clang-tidy
        run: |
          python run-clang-tidy.py -p build -header-filter '^sdk/.*' > clangtidy.log || true

      - name: Run cppcheck
        run: |
          cppcheck --project=build/compile_commands.json \
            --suppress=*:*WDL/* --suppress=*:*reaper-plugins/* --suppress=*:*build/* \
            --output-file=cppcheck.log || true

      - name: Upload logs
        uses: actions/upload-artifact@v4
        with:
          name: static-logs
          path: |
            clangtidy.log
            cppcheck.log

