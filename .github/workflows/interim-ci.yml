name: interim-ci

on:
  pull_request:
    paths:
      - "CMakeLists.txt"
      - "cmake/**"
      - "src/**"
      - "include/**"
      - "apps/**"
      - "adapters/**"
      - "tests/**"
      - "packages/**"
      - "docs/integration/**"
  push:
    branches: [ main ]
    paths:
      - "CMakeLists.txt"
      - "cmake/**"
      - "src/**"
      - "include/**"
      - "apps/**"
      - "adapters/**"
      - "tests/**"
      - "packages/**"
      - "docs/integration/**"

jobs:
  build-cpp:
    name: C++ build & tests (Ubuntu)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Cache CMake build
        uses: actions/cache@v4
        with:
          path: build
          key: cmake-${{ runner.os }}-${{ hashFiles('CMakeLists.txt', 'cmake/**', 'src/**', 'include/**') }}
      - name: Configure
        run: cmake -S . -B build -DCMAKE_BUILD_TYPE=Debug
      - name: Build
        run: cmake --build build --parallel
      - name: Test
        run: ctest --test-dir build --output-on-failure

  build-ui:
    name: UI build & lint (Ubuntu)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install PNPM
        uses: pnpm/action-setup@v3
        with:
          version: 8
      - name: Detect JS workspace
        id: detect
        run: |
          if [ -f package.json ] || [ -f pnpm-workspace.yaml ]; then
            echo "has_ws=true" >> "$GITHUB_OUTPUT"
          else
            echo "has_ws=false" >> "$GITHUB_OUTPUT"
          fi
      - name: Cache PNPM store
        if: steps.detect.outputs.has_ws == 'true'
        uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: pnpm-${{ runner.os }}-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            pnpm-${{ runner.os }}-
      - name: Install deps
        if: steps.detect.outputs.has_ws == 'true'
        run: pnpm install --frozen-lockfile || pnpm install
      - name: Build UI
        if: steps.detect.outputs.has_ws == 'true'
        run: pnpm -w run build || true
      - name: Lint JS
        if: steps.detect.outputs.has_ws == 'true'
        run: pnpm run lint:js || true
